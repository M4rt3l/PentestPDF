### NIKTO AUTOMATED RUN SCRIPT ###
# Nikto is considered a potential threat, so MS Defender realtime monitoring must be disabled
# NOTE: monitoring can be disabled only if tamper protection is off !!!

param (
    [string]$desktopPath = [System.Environment]::GetFolderPath('Desktop'),
    [string]$target = "127.0.0.1"
)

#Set-MpPreference -DisableRealtimeMonitoring $true
#(Get-MpPreference).DisableRealtimeMonitoring

$scriptsDirectory = Split-Path -Path $MyInvocation.MyCommand.Path -Parent
$baseDirectory = Split-Path -Path $scriptsDirectory -Parent
$toolsDirectory = "$baseDirectory\Tools"

$niktoPath = "$toolsDirectory\nikto\program\nikto.pl"

if (-not (Test-Path $niktoPath)) {
    $zipPath = "$toolsDirectory\nikto-master.zip"
    try {
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory($zipPath, "$toolsDirectory\nikto")
        Write-Host "  $(Split-Path $zipPath -Leaf) successfully extracted."
    } catch {
        Write-Host "  $(Split-Path $zipPath -Leaf) Extraction failed."
    }
}

$perlPath = "$toolsDirectory\strawberry\perl\bin\perl.exe"

if (-not (Test-Path $perlPath)) {
    $zipPath = "$toolsDirectory\strawberry-perl-5.20.3.3.zip"
    try {
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory($zipPath, "$toolsDirectory\strawberry")
        Write-Host "  $(Split-Path $zipPath -Leaf) successfully extracted."
    } catch {
        Write-Host "  $(Split-Path $zipPath -Leaf) Extraction failed."
    }
}

$outputsDirectory = "$desktopPath\Outputs"
$outputPath = "$outputsDirectory\nikto.txt"

if (-not (Test-Path $outputsDirectory)) {
    New-Item -Path $outputsDirectory -ItemType Directory
}

if ((Test-Path $perlPath) -and (Test-Path $niktoPath)) {
    $command = "$perlPath $niktoPath -h $target"
    Invoke-Expression $command | Out-File -FilePath $outputPath -Append

    # second option of running this command
    #& $command > $outputPath
}