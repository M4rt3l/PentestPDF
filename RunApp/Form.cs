using System.Diagnostics;

namespace RunApp
{
    public partial class Form : System.Windows.Forms.Form
    {
        private static string baseDirectory = AppDomain.CurrentDomain.BaseDirectory;
        private static string outputText = "";
        private static bool runSuccess = false;

        public Form()
        {
            InitializeComponent();
        }

        private async void buttonRun_Click(object sender, EventArgs e)
        {
            buttonRun.Enabled = false;

            label_nmap.Text = "none";
            label_nmap.ForeColor = Color.Black;
            label_mimikatz.Text = "none";
            label_mimikatz.ForeColor = Color.Black;

            bool anyChecked = IsAnythingChecked(tableLayout);
            if (anyChecked)
            {
                await HandleRun("nmap", checkBox_nmap, label_nmap);
                consoleBox.Text += outputText;

                PDF.Create(postOpen.Checked);
            }
            else
            {
                consoleBox.Text += "Nothing is checked. Please select some tool." + Environment.NewLine;
            }

            buttonRun.Enabled = true;
        }

        private async Task HandleRun(string scriptName, CheckBox checkBox, Label label)
        {
            runSuccess = false;

            string scriptPath = $"{baseDirectory}\\Content\\Scripts\\{scriptName}.ps1";

            if (checkBox.Checked)
            {
                label.Text = "Running";
                label.ForeColor = Color.Black;

                outputText = GetSeparator(scriptName) + Environment.NewLine;
                await Task.Run(() => RunScript(scriptPath));

                label.Text = runSuccess ? "Success" : "Failed";
                label.ForeColor = runSuccess ? Color.Green : Color.Red;
            }
            else
            {
                outputText = "";
            }
        }

        private static void RunScript(string path)
        {
            ProcessStartInfo psi = new ProcessStartInfo
            {
                FileName = "powershell.exe",
                Arguments = $"-File \"{path}\"",
                UseShellExecute = false,
                CreateNoWindow = true,
                RedirectStandardOutput = true,
                RedirectStandardError = true
            };

            using (Process? process = Process.Start(psi))
            {
                if (process != null)
                {
                    process.WaitForExit();

                    if (process.ExitCode == 0)
                    {
                        runSuccess = true;

                        while (!process.StandardOutput.EndOfStream)
                        {
                            outputText += process.StandardOutput.ReadLine() + Environment.NewLine;
                        }

                        while (!process.StandardError.EndOfStream)
                        {
                            outputText += process.StandardError.ReadLine() + Environment.NewLine;
                        }
                    }
                    else
                    {
                        outputText += $"Process failed with exit code: {process.ExitCode}." + Environment.NewLine;
                    }
                }
            }
        }

        private static string GetSeparator(string text, int length = 100)
        {
            int borderLength = (length - text.Length) / 2;
            int leftBorderLength = borderLength - 1;
            int rightBorderLength = borderLength - 1;

            if (text.Length % 2 != 0)
                rightBorderLength++;

            string leftBorder = new string('-', leftBorderLength);
            string rightBorder = new string('-', rightBorderLength);

            return leftBorder + " " + text + " " + rightBorder;
        }

        private bool IsAnythingChecked(Control container)
        {
            foreach (Control control in container.Controls)
            {
                if (control is CheckBox checkBox && checkBox.Checked)
                {
                    return true;
                }
            }
            return false;
        }
    }
}